<?php

/**
 * Basepodcast_usuario
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $usuario_id
 * @property integer $podcast_id
 * @property sfGuardUser $User
 * @property podcast $Podcast
 * 
 * @method integer         getUsuarioId()  Returns the current record's "usuario_id" value
 * @method integer         getPodcastId()  Returns the current record's "podcast_id" value
 * @method sfGuardUser     getUser()       Returns the current record's "User" value
 * @method podcast         getPodcast()    Returns the current record's "Podcast" value
 * @method podcast_usuario setUsuarioId()  Sets the current record's "usuario_id" value
 * @method podcast_usuario setPodcastId()  Sets the current record's "podcast_id" value
 * @method podcast_usuario setUser()       Sets the current record's "User" value
 * @method podcast_usuario setPodcast()    Sets the current record's "Podcast" value
 * 
 * @package    entrega3
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basepodcast_usuario extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('podcast_usuario');
        $this->hasColumn('usuario_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('podcast_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'usuario_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('podcast as Podcast', array(
             'local' => 'podcast_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}