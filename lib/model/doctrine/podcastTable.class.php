<?php

/**
 * podcastTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class podcastTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object podcastTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('podcast');
    }

    public static function getPodcast() {
        $q = self::getInstance()->createQuery('c')
                        ->select('nombre')
                        ->execute();
        return $q;
    }

    public static function getNombrePodcast($id) {
        $q = self::getInstance()->createQuery('c')
                        ->select('nombre')
                        ->where('c.id = ?', $id)
                        ->execute();
        return $q;
    }

    public static function getMisPodcast($id) {
        $q = self::getInstance()->createQuery('c')
                        ->select('nombre')
                        ->where('c.idusuario = ?', $id)
                        ->execute();
        return $q;
    }

    public static function getIdUsuarioPodcast($id) {
        $q = self::getInstance()->createQuery('c')
                        ->select('idusuario')
                        ->where('c.id = ?', $id)
                        ->execute();
        return $q[0]->getIdUsuario();
    }
    
	public static function getPodcastDeEpisodio($id) {
        $q = self::getInstance()->createQuery('p')
                        ->where(' p.id = ?', $id)
                        ->execute();
        return $q[0];
    }

    public static function getCategoriaPodcast($id) {
        $q = self::getInstance()->createQuery('c')
                        ->where('c.idcategoria = ?', $id)
                        ->execute();
        return $q;
    }
    
	public static function getAllPodcast() {
        $q = self::getInstance()->createQuery('c')
        						->where('p.habilitado=1')
                        		->execute();
        return $q;
    }

    public static function getPodcastRss() {
        $q = self::getInstance()->createQuery('p')
                        ->where('p.habilitado=1')
                        ->orderby('p.id DESC')
                        ->execute();
        return $q;
    }
}